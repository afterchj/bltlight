<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao80.TbkDao">
    <resultMap id="getTbkUser" type="TbkUser">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="appid" column="appid" javaType="String" jdbcType="VARCHAR"/>
        <result property="create_date" column="create_date" javaType="java.sql.Date" jdbcType="DATE"/>
        <result property="mobile" column="mobile" javaType="String" jdbcType="VARCHAR"/>
        <result property="username" column="username" javaType="String" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" javaType="String" jdbcType="VARCHAR"/>
        <result property="login_name" column="login_name" javaType="String" jdbcType="VARCHAR"/>
        <result property="icon" column="icon" javaType="String" jdbcType="VARCHAR"/>
        <result property="imei" column="imei" javaType="String" jdbcType="VARCHAR"/>
        <result property="imsi" column="imsi" javaType="String" jdbcType="VARCHAR"/>
        <result property="fm" column="fm" javaType="String" jdbcType="VARCHAR"/>
        <result property="os" column="os" javaType="String" jdbcType="VARCHAR"/>
        <result property="model" column="model" javaType="String" jdbcType="VARCHAR"/>
        <result property="operators" column="operators" javaType="String" jdbcType="VARCHAR"/>
        <result property="resolution" column="resolution" javaType="String" jdbcType="VARCHAR"/>
        <result property="pkg" column="pkg" javaType="String" jdbcType="VARCHAR"/>
        <result property="clientVersion" column="clientVersion" javaType="String" jdbcType="VARCHAR"/>
        <result property="netEnv" column="netEnv" javaType="String" jdbcType="VARCHAR"/>
        <result property="other" column="other" javaType="String" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="findIdFromHipriceLog" parameterType="string"  resultType="com.tpadsz.after.entity.ShareLog">
        SELECT id,result_info as goods_share_message FROM tbk.f_hiprice_log WHERE uid = #{uid} and num_iid= #{num_iid} order by touch_time desc limit 1
    </select>

    <insert id="saveShareLog" parameterType="com.tpadsz.after.entity.ShareLog">
        INSERT INTO tbk.f_share_log(num_iid,uid,share_id,goods_share_message,share_time)
        VALUES
	      (#{num_iid},#{uid},#{share_id},#{goods_share_message},now())
    </insert>

    <select id="findEarnByNumiid" parameterType="string" resultType="double">
        SELECT IFNULL((SELECT rate_touid FROM tbk.f_tbk_shop WHERE num_iid = #{num_iid}),0.0)
    </select>

    <insert id="insertOrUpdateAccount" parameterType="com.tpadsz.after.entity.Account">
        INSERT INTO tbk.account(uid,app_id,avail,earn) values(#{uid},#{app_id},#{avail},#{earn}) ON DUPLICATE KEY UPDATE avail=avail+#{avail},earn=earn+#{earn};
    </insert>

    <insert id="insertDailyAccount" parameterType="com.tpadsz.after.entity.DailyAccount">
        INSERT INTO tbk.daily_account(uid,app_id,date,trade_type,earn) values(#{uid},#{app_id},#{date},#{trade_type},#{earn});
    </insert>

    <insert id="insertOrUpdateDailyEstimatedAccount" parameterType="com.tpadsz.after.entity.DailyEstimatedAccount">
        REPLACE INTO tbk.daily_estimated_account(trade_id,uid,app_id,date,update_time,trade_type,status,price) values(#{trade_id},#{uid},#{app_id},#{date},NOW(),#{trade_type},#{status},#{price});
    </insert>

    <select id="findAvail" parameterType="string" resultType="int">
        SELECT IFNULL((SELECT avail FROM tbk.account WHERE uid = #{uid}),0);
    </select>

    <select id="findTodayEcoins" parameterType="string" resultType="int">
        SELECT coalesce(SUM(price),0) FROM tbk.daily_estimated_account WHERE uid = #{uid} and status= 12 and DATEDIFF(date,CURDATE()) =0
    </select>

    <select id="findPresentMonthEcoins" parameterType="string" resultType="int">
        SELECT coalesce(SUM(price),0) FROM tbk.daily_estimated_account WHERE uid = #{uid} and status= 12 and DATE_FORMAT(date, '%Y%m') = DATE_FORMAT(CURDATE( ) , '%Y%m')
    </select>

    <select id="findLastMonthEcoins" parameterType="string" resultType="int">
        SELECT coalesce(SUM(price),0) FROM tbk.daily_estimated_account WHERE uid = #{uid} and status= 12 and PERIOD_DIFF( date_format( now() , '%Y%m' ) , date_format(date, '%Y%m' )) =1
    </select>

    <select id="findLastMonthCoins" parameterType="string" resultType="int">
        SELECT coalesce(SUM(earn),0) FROM tbk.daily_account WHERE uid = #{uid} and trade_type= 1001 and PERIOD_DIFF( date_format( now() , '%Y%m' ) , date_format(date, '%Y%m' )) =1
    </select>

    <select id="findYesterdayEcoins" parameterType="string" resultType="int">
        SELECT coalesce(SUM(price),0) FROM tbk.daily_estimated_account WHERE uid = #{uid} and status= 12 and DATEDIFF(date,CURDATE()) =- 1
    </select>

    <select id="findConsumeFromPayOrder" parameterType="string" resultType="int">
        SELECT coalesce(SUM(price),0) FROM tbk.f_pay_order WHERE uid = #{uid} and trade_type= '2004'
    </select>

    <select id="findTodayOrders" parameterType="string" resultType="int">
        SELECT count(*) FROM tbk.f_tbk_order WHERE uid = #{uid} and status= 12 and DATEDIFF(create_time,CURDATE()) =0
    </select>

    <select id="findYesterdayOrders" parameterType="string" resultType="int">
        SELECT count(*) FROM tbk.f_tbk_order WHERE uid = #{uid} and status= 12 and DATEDIFF(create_time,CURDATE()) =- 1
    </select>

    <select id="findLoglistOfIncome"  resultType="com.tpadsz.after.entity.DailyAccount">
        SELECT uid,trade_type,earn,date FROM tbk.daily_account WHERE uid = #{uid} and trade_type= 1001 order by date desc limit #{startIndex},#{pageSize}
    </select>

    <select id="findLoglistOfConsume"  resultType="com.tpadsz.after.entity.DailyAccount">
        SELECT uid,trade_type,price as consume,create_time as date FROM tbk.f_pay_order WHERE uid = #{uid} and trade_type= 2004 order by create_time desc limit #{startIndex},#{pageSize}
    </select>

    <insert id="saveHandyRegister" parameterType="com.tpadsz.after.entity.TbkUser" >
        INSERT INTO tbk.f_tbk_user
        VALUES(#{id},#{appid},#{create_date},#{mobile},#{username},#{nickname},#{login_name},#{icon},#{imei},#{imsi},#{fm},#{os},#{model},#{operators},#{resolution},#{pkg},#{clientVersion},#{netEnv},#{other})
    </insert>

    <select id="findTbkUserById" parameterType="string" resultMap="getTbkUser">
        SELECT * FROM tbk.f_tbk_user WHERE id=#{id}
    </select>

    <select id="findTbkUserByMobile" parameterType="string" resultMap="getTbkUser">
        SELECT * FROM tbk.f_tbk_user WHERE mobile=#{mobile}
    </select>

    <insert id="save" parameterType="com.tpadsz.after.entity.TbkUser">
        INSERT INTO tbk.f_tbk_user
        VALUES(#{id},#{appid},#{create_date},#{mobile},#{username},#{nickname},#{login_name},#{icon},#{imei},#{imsi},#{fm},#{os},#{model},#{operators},#{resolution},#{pkg},#{clientVersion},#{netEnv},#{other})
    </insert>

    <insert id="saveLoginLog" parameterType="com.tpadsz.after.entity.TbkLoginLog">
        INSERT INTO tbk.f_tbk_user_log VALUES(#{id},#{login_date},#{loginout_date},#{behavior},#{uid},#{mobile},#{create_date})
    </insert>

    <insert id="tbkSave" parameterType="String">
        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            SELECT count(*) FROM tbk.f_tbk_user_search s WHERE s.uid=#{uid} and s.name=#{searchName}
        </selectKey>
        <if test="count > 0">
            UPDATE tbk.f_tbk_user_search s
            SET s.times = times + 1
            WHERE
            s.uid=#{uid} and s.name = #{searchName}
        </if>
        <if test="count==0">
            INSERT INTO tbk.f_tbk_user_search (
            uid,
            name,
            times,
            update_time
            )
            VALUES
            (#{uid},#{searchName},1,NOW());
        </if>
    </insert>



</mapper>